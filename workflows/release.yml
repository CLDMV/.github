# CLDMV/.github/.github/workflows/release-modular.yml
name: Release Workflow (Modular)

on:
  workflow_call:
    inputs:
      package_name:
        required: true
        type: string
        description: "NPM package name (e.g., @cldmv/slothlet)"
      node_version:
        required: false
        type: string
        default: "lts/*"
        description: "Node.js version to use"
      test_command:
        required: false
        type: string
        default: "npm test"
        description: "Command to run pre-build tests"
      build_command:
        required: false
        type: string
        default: "npm run build:ci"
        description: "Command to build package (should include post-build tests)"
      package_manager:
        required: false
        type: string
        default: "npm"
        description: "Package manager (npm or yarn)"
    outputs:
      release-pr-created:
        description: "Whether a release PR was created"
        value: ${{ jobs.create-release-pr.outputs.pr-created }}
      release-pr-number:
        description: "The release PR number if created"
        value: ${{ jobs.create-release-pr.outputs.pr-number }}
      new-version:
        description: "The new version that was set"
        value: ${{ jobs.create-release-pr.outputs.new-version }}

jobs:
  # Git-based release commit detection
  check-release-commit:
    name: "🔍 Check Release Commit"
    runs-on: ubuntu-latest
    outputs:
      should-create-pr: ${{ steps.check.outputs.should-create-pr }}
      version-bump: ${{ steps.check.outputs.version-bump }}
      commit-message: ${{ steps.check.outputs.commit-message }}
      has-breaking: ${{ steps.check.outputs.has-breaking }}

    steps:
      - name: Checkout code
        uses: CLDMV/.github/workflow-packages/common/steps/checkout-code.yml
        with:
          fetch-depth: 0

      - name: Check for release commit
        id: check
        uses: CLDMV/.github/workflow-packages/git/steps/check-release-commit.yml

  # NPM-specific testing before creating release PR
  run-tests:
    name: "🧪 Run Tests"
    needs: check-release-commit
    if: needs.check-release-commit.outputs.should-create-pr == 'true'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: CLDMV/.github/workflow-packages/common/steps/checkout-code.yml

      - name: Setup Node.js
        uses: CLDMV/.github/workflow-packages/common/steps/setup-node.yml
        with:
          node-version: ${{ inputs.node_version }}

      - name: Install dependencies
        uses: CLDMV/.github/workflow-packages/npm/steps/install-dependencies.yml
        with:
          package-manager: ${{ inputs.package_manager }}

      - name: Run pre-build tests
        uses: CLDMV/.github/workflow-packages/common/steps/run-tests.yml
        with:
          test-command: ${{ inputs.test_command }}
          environment: development

  # GitHub API-based release PR creation
  create-release-pr:
    needs: [check-release-commit, run-tests]
    if: needs.check-release-commit.outputs.should-create-pr == 'true'
    uses: CLDMV/.github/workflow-packages/github/jobs/create-release-pr.yml
    with:
      package-name: ${{ inputs.package_name }}
      node-version: ${{ inputs.node_version }}
      package-manager: ${{ inputs.package_manager }}
      build-command: ${{ inputs.build_command }}
      version-bump: ${{ needs.check-release-commit.outputs.version-bump }}
    secrets:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  # Summary notification
  notify-completion:
    name: "✅ Release PR Summary"
    needs: [check-release-commit, create-release-pr]
    if: always() && needs.check-release-commit.outputs.should-create-pr == 'true'
    runs-on: ubuntu-latest

    steps:
      - name: Release PR summary
        shell: bash
        run: |
          COMMIT_MSG="${{ needs.check-release-commit.outputs.commit-message }}"
          VERSION_BUMP="${{ needs.check-release-commit.outputs.version-bump }}"

          if [[ "${{ needs.create-release-pr.outputs.pr-created }}" == "true" ]]; then
            echo "✅ Release PR created successfully!"
            echo "📋 PR Number: ${{ needs.create-release-pr.outputs.pr-number }}"
            echo "🏷️ New Version: ${{ needs.create-release-pr.outputs.new-version }}"
            echo "📈 Version Bump: $VERSION_BUMP"
            echo "💬 Trigger Commit: $COMMIT_MSG"
            
            if [[ "${{ needs.check-release-commit.outputs.has-breaking }}" == "true" ]]; then
              echo "💥 Contains Breaking Changes: Yes"
            else
              echo "💥 Contains Breaking Changes: No"
            fi
          else
            echo "❌ Failed to create release PR"
            exit 1
          fi
