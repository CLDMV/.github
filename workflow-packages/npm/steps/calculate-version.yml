name: "Calculate Version"
description: "Calculate new version based on current package.json and bump type"

inputs:
  version-bump:
    description: "Type of version bump (major, minor, patch)"
    required: true

outputs:
  current-version:
    description: "Current version from package.json"
    value: ${{ steps.version.outputs.current-version }}
  new-version:
    description: "Calculated new version"
    value: ${{ steps.version.outputs.new-version }}

runs:
  using: "composite"
  steps:
    - name: Get current version and calculate new version
      id: version
      shell: bash
      run: |
        CURRENT_VERSION=$(node -p "require('./package.json').version")
        echo "current-version=$CURRENT_VERSION" >> $GITHUB_OUTPUT

        # Split version into parts
        IFS='.' read -ra VERSION_PARTS <<< "$CURRENT_VERSION"
        MAJOR=${VERSION_PARTS[0]}
        MINOR=${VERSION_PARTS[1]}
        PATCH=${VERSION_PARTS[2]}

        # Calculate new version based on bump type
        BUMP_TYPE="${{ inputs.version-bump }}"
        if [ "$BUMP_TYPE" = "major" ]; then
          NEW_VERSION="$((MAJOR + 1)).0.0"
        elif [ "$BUMP_TYPE" = "minor" ]; then
          NEW_VERSION="$MAJOR.$((MINOR + 1)).0"
        else
          NEW_VERSION="$MAJOR.$MINOR.$((PATCH + 1))"
        fi

        echo "new-version=$NEW_VERSION" >> $GITHUB_OUTPUT
        echo "üè∑Ô∏è Version bump: $CURRENT_VERSION ‚Üí $NEW_VERSION ($BUMP_TYPE)"
