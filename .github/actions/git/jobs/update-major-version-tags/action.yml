name: "üîÑ Git Tag Operations"
description: "Composite action for updating major/minor version tags and fixing orphans"

inputs:
  create-documentation:
    description: "Whether to create/update VERSION_TAGS.md documentation"
    required: false
    default: "true"
  repo:
    description: "owner/repo (defaults to the caller repository). Passed through to orphan fixer."
    required: false
  sign:
    description: "Smart signing mode for tag updates (auto/true/false)"
    required: false
    default: "auto"
  annotate:
    description: "Smart annotate mode (auto/true/false)"
    required: false
    default: "auto"
  tagger_name:
    description: "Tagger name"
    required: false
  tagger_email:
    description: "Tagger email"
    required: false
  gpg_private_key:
    description: "ASCII-armored private key for signing"
    required: false
  gpg_passphrase:
    description: "Passphrase for the private key (if protected)"
    required: false

outputs:
  major-version:
    description: "The major version tag that was updated"
    value: ${{ steps.update-tags.outputs.major-version }}
  minor-version:
    description: "The minor version tag that was updated"
    value: ${{ steps.update-tags.outputs.minor-version }}
  updated:
    description: "Whether tags were successfully updated"
    value: ${{ steps.update-tags.outputs.updated }}
  has-version-tags:
    description: "Whether version tags were found"
    value: ${{ steps.check-tags.outputs.has_version_tags }}
  should-run:
    description: "Whether the tag update should run"
    value: ${{ steps.should-run.outputs.result }}
  fixed-orphans:
    description: "Multiline list of orphaned tags that were fixed"
    value: ${{ steps.fix-orphans.outputs.fixed-tags }}
  orphans-found:
    description: "Whether any orphaned tags were found (and fixed if run_mode=fix)"
    value: ${{ steps.fix-orphans.outputs.orphans-found }}

runs:
  using: composite
  steps:
    - name: Checkout code (full history for tags)
      uses: CLDMV/.github/.github/actions/common/steps/checkout-code@v1
      with:
        fetch-depth: 0

    # - name: Sanity - create/move a temp tag in this repo
    #   env:
    #     GH_TOKEN: ${{ github.token }}
    #   shell: bash
    #   run: |
    #     set -euo pipefail
    #     REPO="${{ github.repository }}"
    #     sha="$(git ls-remote https://github.com/$REPO HEAD | awk '{print $1}')"
    #     curl -fsS -X POST -H "Authorization: Bearer $GH_TOKEN" -H "Accept: application/vnd.github+json" \
    #       "https://api.github.com/repos/$REPO/git/refs" \
    #       -d "{\"ref\":\"refs/tags/_actions_temp\",\"sha\":\"$sha\"}" || true
    #     curl -fsS -X PATCH -H "Authorization: Bearer $GH_TOKEN" -H "Accept: application/vnd.github+json" \
    #       "https://api.github.com/repos/$REPO/git/refs/tags/_actions_temp" \
    #       -d "{\"sha\":\"$sha\",\"force\":true}"

    - name: Check for version tags
      id: check-tags
      uses: CLDMV/.github/.github/actions/git/steps/check-version-tags@v1

    - name: Fix orphaned major/minor version tags (detect+fix via reusable job)
      id: fix-orphans
      uses: CLDMV/.github/.github/actions/github/jobs/fix-orphaned-version-tags@v1
      with:
        repo: ${{ inputs.repo || github.repository }}
        github_token: ${{ env.GITHUB_TOKEN }}
        sign: ${{ inputs.sign }}
        annotate: ${{ inputs.annotate }}
        tagger_name: ${{ inputs.tagger_name }}
        tagger_email: ${{ inputs.tagger_email }}
        gpg_private_key: ${{ inputs.gpg_private_key }}
        gpg_passphrase: ${{ inputs.gpg_passphrase }}

    - name: Determine if should run
      id: should-run
      shell: bash
      run: |
        if [ "${{ github.event_name }}" = "workflow_call" ] || [ "${{ steps.check-tags.outputs.has_version_tags }}" = "true" ]; then
          echo "result=true" >> "$GITHUB_OUTPUT"
          echo "‚úÖ Should run tag updates"
        else
          echo "result=false" >> "$GITHUB_OUTPUT"
          echo "‚ùå Skipping tag updates - no version tags found"
        fi

    - name: Get tag name
      id: get-tag
      if: steps.should-run.outputs.result == 'true'
      shell: bash
      run: |
        if [ "${{ github.event_name }}" = "release" ]; then
          TAG_NAME="${{ github.event.release.tag_name }}"
        else
          TAG_NAME="${{ github.ref_name }}"
        fi
        echo "tag-name=$TAG_NAME" >> "$GITHUB_OUTPUT"
        echo "Processing tag: $TAG_NAME"

    - name: Update major/minor version tags to this release
      id: update-tags
      if: steps.should-run.outputs.result == 'true'
      uses: CLDMV/.github/.github/actions/git/steps/update-major-version-tags@v1
      with:
        tag-name: ${{ steps.get-tag.outputs.tag-name }}

    - name: Generate version documentation
      if: inputs.create-documentation == 'true' && steps.update-tags.outputs.updated == 'true'
      uses: CLDMV/.github/.github/actions/git/steps/generate-version-documentation@v1
      with:
        create-documentation: ${{ inputs.create-documentation }}

    - name: Create summary
      shell: bash
      run: |
        {
          echo "## üè∑Ô∏è Version Tag Operations"
          echo
          if [ "${{ steps.fix-orphans.outputs.orphans-found }}" = "true" ]; then
            echo "### üîß Fixed Orphaned Tags"
            echo "The following version tags were corrected:"
            echo
            # fixed-orphans is multiline; print as-is
            while IFS= read -r line; do
              [ -n "$line" ] && echo "- $line"
            done <<< "${{ steps.fix-orphans.outputs.fixed-tags }}"
            echo
          fi

          if [ "${{ steps.update-tags.outputs.updated }}" = "true" ]; then
            echo "### üìå Version Tags Updated"
            echo "The following major/minor version tags have been updated:"
            echo
            echo "- \`${{ steps.update-tags.outputs.major-version }}\` ‚Üí \`${{ steps.get-tag.outputs.tag-name }}\`"
            echo "- \`${{ steps.update-tags.outputs.minor-version }}\` ‚Üí \`${{ steps.get-tag.outputs.tag-name }}\`"
            echo
          fi

          if [ "${{ steps.fix-orphans.outputs.orphans-found }}" = "false" ] && [ "${{ steps.update-tags.outputs.updated }}" != "true" ]; then
            echo "‚úÖ All version tags are up to date - no changes needed"
          fi

          echo
          echo "Workflows can reference major version tags (e.g., \`@v1\`) for automatic updates."
        } >> "$GITHUB_STEP_SUMMARY"
