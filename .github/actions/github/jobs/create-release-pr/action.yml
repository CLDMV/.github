name: "Create Release PR"
description: "Composite action for creating release pull requests"

inputs:
  package-name:
    description: "NPM package name"
    required: true
  node-version:
    description: "Node.js version to use"
    required: false
    default: "lts/*"
  package-manager:
    description: "Package manager (npm or yarn)"
    required: false
    default: "npm"
  build-command:
    description: "Command to build package"
    required: false
    default: "npm run build:ci"
  version-bump:
    description: "Type of version bump (major, minor, patch). Leave empty for auto-detection from commit message."
    required: false
    default: ""
  github-token:
    description: "GitHub token for API operations"
    required: true

outputs:
  pr-created:
    description: "Whether a release PR was created"
    value: ${{ steps.create-pr.outputs.pr-created }}
  pr-number:
    description: "The release PR number if created"
    value: ${{ steps.create-pr.outputs.pr-number }}
  new-version:
    description: "The new version that was set"
    value: ${{ steps.version.outputs.new-version }}

runs:
  using: composite
  steps:
    - name: Update Summary - Release PR Start
      shell: bash
      run: |
        echo "## 📋 Release PR Progress" >> $GITHUB_STEP_SUMMARY
        echo "- 🔄 Starting release PR creation for ${{ inputs.package-name }}" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY

    - name: Checkout code
      uses: CLDMV/.github/.github/actions/common/steps/checkout-code@v1
      with:
        fetch-depth: 0

    - name: Setup Node.js
      uses: CLDMV/.github/.github/actions/common/steps/setup-node@v1
      with:
        node-version: ${{ inputs.node-version }}

    - name: Install dependencies
      uses: CLDMV/.github/.github/actions/npm/steps/install-dependencies@v1
      with:
        package-manager: ${{ inputs.package-manager }}

    - name: Check release commit for auto-detection
      id: commit-check
      if: inputs.version-bump == ''
      uses: CLDMV/.github/.github/actions/git/steps/check-release-commit@v1

    - name: Calculate new version
      id: version
      uses: CLDMV/.github/.github/actions/npm/steps/calculate-version@v1
      with:
        version-bump: ${{ inputs.version-bump != '' && inputs.version-bump || steps.commit-check.outputs.version-bump }}
        explicit-version: ${{ steps.commit-check.outputs.explicit-version }}

    - name: Update Summary - Version Calculated
      shell: bash
      run: |
        echo "- ✅ New version calculated: v${{ steps.version.outputs.new-version }}" >> $GITHUB_STEP_SUMMARY

    - name: Build package
      uses: CLDMV/.github/.github/actions/common/steps/build-project@v1
      with:
        build-command: ${{ inputs.build-command }}
        environment: production

    - name: Update package version
      uses: CLDMV/.github/.github/actions/npm/steps/update-package-version@v1
      with:
        new-version: ${{ steps.version.outputs.new-version }}
        package-manager: ${{ inputs.package-manager }}

    - name: Generate comprehensive changelog
      id: changelog
      uses: CLDMV/.github/.github/actions/git/steps/generate-comprehensive-changelog@v1
      with:
        github-token: ${{ inputs.github-token }}

    - name: Detect default branch
      id: default-branch
      uses: CLDMV/.github/.github/actions/git/utilities/detect-default-branch@v1

    - name: Create signed commit
      id: commit
      uses: CLDMV/.github/.github/actions/github/api/commit@v1
      with:
        commit-message: "chore: bump version to ${{ steps.version.outputs.new-version }}"
        github-token: ${{ inputs.github-token }}

    - name: Create pull request
      id: create-pr
      uses: CLDMV/.github/.github/actions/github/api/pull-requests@v1
      with:
        title: "release: v${{ steps.version.outputs.new-version }}"
        base-branch: ${{ steps.default-branch.outputs.default-branch }}
        head-branch: ${{ github.ref_name }}
        body-content: ${{ steps.changelog.outputs.changelog-content }}
        labels: "release,${{ inputs.version-bump != '' && inputs.version-bump || steps.commit-check.outputs.version-bump }}"
      env:
        GITHUB_TOKEN: ${{ inputs.github-token }}

    - name: Update Summary - PR Created
      if: steps.create-pr.outputs.pr-created == 'true'
      shell: bash
      run: |
        echo "- ✅ Release PR created: [#${{ steps.create-pr.outputs.pr-number }}](${{ github.server_url }}/${{ github.repository }}/pull/${{ steps.create-pr.outputs.pr-number }})" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "🎉 **Release PR Complete** - [Ready for review and merge →](${{ github.server_url }}/${{ github.repository }}/pull/${{ steps.create-pr.outputs.pr-number }})" >> $GITHUB_STEP_SUMMARY

    - name: Update Summary - No PR Created
      if: steps.create-pr.outputs.pr-created != 'true'
      shell: bash
      run: |
        echo "- ℹ️ No release PR created (not a release commit)" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "💡 **Tip**: Use \`release:\` or \`release!:\` prefix to trigger releases" >> $GITHUB_STEP_SUMMARY
