name: 🧪 Test Tag Creation Methods

on:
  workflow_call:
    inputs:
      package_name:
        description: "Package name for testing"
        required: true
        type: string
      test_tag_name:
        description: "Tag name to create for testing (e.g., test-v1.0.0)"
        required: true
        type: string
      target_commit:
        description: "Commit SHA to tag (defaults to HEAD)"
        required: false
        type: string
        default: ""
      cleanup_tag:
        description: "Whether to clean up the test tag after testing"
        required: false
        type: boolean
        default: true
    secrets:
      CLDMV_BOT_APP_ID:
        description: "GitHub App ID for creating app tokens"
        required: true
      CLDMV_BOT_APP_PRIVATE_KEY:
        description: "GitHub App private key for creating app tokens"
        required: true
      CLDMV_BOT_NAME:
        description: "Bot name for git operations (optional, defaults to app-slug based name)"
        required: false
      CLDMV_BOT_EMAIL:
        description: "Bot email for git operations (optional, defaults to app-slug based email)"
        required: false
      CLDMV_BOT_GPG_PRIVATE_KEY:
        description: "GPG private key for signing (optional)"
        required: false
      CLDMV_BOT_GPG_PASSPHRASE:
        description: "GPG passphrase for signing (optional)"
        required: false
      CLDMV_GPG_PRIVATE_KEY:
        description: "GPG private key for signing tags (optional)"
        required: false
      CLDMV_GPG_PASSPHRASE:
        description: "GPG passphrase for signing tags (optional)"
        required: false

jobs:
  # Matrix Test 1: App Token + No App Permissions + No YAML Permissions
  test-app-no-app-perms-no-yaml-perms:
    runs-on: ubuntu-latest
    outputs:
      result: ${{ steps.test-tags.outputs.overall_result }}
      git_result: ${{ steps.test-tags.outputs.git_result }}
      api_result: ${{ steps.test-tags.outputs.api_result }}
      gpg_result: ${{ steps.test-tags.outputs.gpg_result }}
      details: ${{ steps.test-tags.outputs.details }}

    steps:
      - uses: actions/checkout@v4

      - name: Debug - Check if App ID secret is available
        run: |
          if [ -n "$CLDMV_BOT_APP_ID" ] && [ "$CLDMV_BOT_APP_ID" != "" ]; then
            echo "✅ CLDMV_BOT_APP_ID secret is available (length: ${#CLDMV_BOT_APP_ID})"
          else
            echo "❌ CLDMV_BOT_APP_ID secret is empty or not available"
            echo "CLDMV_BOT_APP_ID value: '$CLDMV_BOT_APP_ID'"
            echo "❌ This will cause the app token creation to fail with 'appId option is required'"
            exit 1
          fi
        env:
          CLDMV_BOT_APP_ID: ${{ secrets.CLDMV_BOT_APP_ID }}

      - name: Get CLDMV app token (no permissions)
        id: app-token
        uses: actions/create-github-app-token@v2
        with:
          app-id: ${{ secrets.CLDMV_BOT_APP_ID }}
          private-key: ${{ secrets.CLDMV_BOT_APP_PRIVATE_KEY }}
          owner: ${{ github.repository_owner }}
          # No permission-* specified = minimal permissions

      - name: Get user ID for bot email
        id: get-user-id
        run: |
          user_id=$(gh api user --jq '.id')
          echo "user-id=$user_id" >> $GITHUB_OUTPUT
        env:
          GH_TOKEN: ${{ steps.app-token.outputs.token }}

      - name: Test tag creation
        id: test-tags
        uses: CLDMV/.github/.github/actions/testing/steps/test-tag-creation-methods@v1
        with:
          test_tag_name: "a00-${{ inputs.test_tag_name }}"
          target_commit: ${{ inputs.target_commit }}
          cleanup_tag: ${{ inputs.cleanup_tag }}
          use_github_token: "false"
          token: ${{ steps.app-token.outputs.token }}
          tagger_name: ${{ steps.app-token.outputs.app-slug && format('{0}[bot]', steps.app-token.outputs.app-slug) || secrets.CLDMV_BOT_NAME }}
          tagger_email: ${{ steps.app-token.outputs.app-slug && format('{0}+{1}[bot]@users.noreply.github.com', steps.get-user-id.outputs.user-id, steps.app-token.outputs.app-slug) || secrets.CLDMV_BOT_EMAIL }}
          gpg_private_key: ${{ secrets.CLDMV_BOT_GPG_PRIVATE_KEY }}
          gpg_passphrase: ${{ secrets.CLDMV_BOT_GPG_PASSPHRASE }}

  # Matrix Test 2: App Token + App Permissions + No YAML Permissions
  test-app-with-app-perms-no-yaml-perms:
    runs-on: ubuntu-latest
    outputs:
      api_success: ${{ steps.test-tags.outputs.api_success }}
      git_success: ${{ steps.test-tags.outputs.git_success }}
      api_release_success: ${{ steps.test-tags.outputs.api_release_success }}
      git_release_success: ${{ steps.test-tags.outputs.git_release_success }}
      token_type: ${{ steps.test-tags.outputs.token_type }}
      api_tag_verified: ${{ steps.test-tags.outputs.api_tag_verified }}
      git_tag_verified: ${{ steps.test-tags.outputs.git_tag_verified }}

    steps:
      - uses: actions/checkout@v4

      - name: Get CLDMV app token (with specific permissions requested)
        id: app-token
        uses: actions/create-github-app-token@v2
        with:
          app-id: ${{ secrets.CLDMV_BOT_APP_ID }}
          private-key: ${{ secrets.CLDMV_BOT_APP_PRIVATE_KEY }}
          owner: ${{ github.repository_owner }}
          permission-contents: write
          permission-metadata: read
          permission-pull-requests: write
          permission-actions: write

      - name: Get user ID for bot email
        id: get-user-id
        run: |
          user_id=$(gh api user --jq '.id')
          echo "user-id=$user_id" >> $GITHUB_OUTPUT
        env:
          GH_TOKEN: ${{ steps.app-token.outputs.token }}

      - name: Test tag creation
        id: test-tags
        uses: CLDMV/.github/.github/actions/testing/steps/test-tag-creation-methods@v1
        with:
          test_tag_name: "a10-${{ inputs.test_tag_name }}"
          target_commit: ${{ inputs.target_commit }}
          cleanup_tag: ${{ inputs.cleanup_tag }}
          use_github_token: "false"
          token: ${{ steps.app-token.outputs.token }}
          tagger_name: ${{ steps.app-token.outputs.app-slug && format('{0}[bot]', steps.app-token.outputs.app-slug) || secrets.CLDMV_BOT_NAME }}
          tagger_email: ${{ steps.app-token.outputs.app-slug && format('{0}+{1}[bot]@users.noreply.github.com', steps.get-user-id.outputs.user-id, steps.app-token.outputs.app-slug) || secrets.CLDMV_BOT_EMAIL }}
          gpg_private_key: ${{ secrets.CLDMV_BOT_GPG_PRIVATE_KEY }}
          gpg_passphrase: ${{ secrets.CLDMV_BOT_GPG_PASSPHRASE }}

  # Matrix Test 3: App Token + No App Permissions + YAML Permissions
  test-app-no-app-perms-with-yaml-perms:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      actions: write
      pull-requests: write
    outputs:
      result: ${{ steps.test-tags.outputs.overall_result }}
      git_result: ${{ steps.test-tags.outputs.git_result }}
      api_result: ${{ steps.test-tags.outputs.api_result }}
      gpg_result: ${{ steps.test-tags.outputs.gpg_result }}
      details: ${{ steps.test-tags.outputs.details }}

    steps:
      - uses: actions/checkout@v4

      - name: Get CLDMV app token (no app permissions)
        id: app-token
        uses: actions/create-github-app-token@v2
        with:
          app-id: ${{ secrets.CLDMV_BOT_APP_ID }}
          private-key: ${{ secrets.CLDMV_BOT_APP_PRIVATE_KEY }}
          owner: ${{ github.repository_owner }}
          # No permission-* specified = minimal permissions

      - name: Get user ID for bot email
        id: get-user-id
        run: |
          user_id=$(gh api user --jq '.id')
          echo "user-id=$user_id" >> $GITHUB_OUTPUT
        env:
          GH_TOKEN: ${{ steps.app-token.outputs.token }}

      - name: Test tag creation
        id: test-tags
        uses: CLDMV/.github/.github/actions/testing/steps/test-tag-creation-methods@v1
        with:
          test_tag_name: "a01-${{ inputs.test_tag_name }}"
          target_commit: ${{ inputs.target_commit }}
          cleanup_tag: ${{ inputs.cleanup_tag }}
          use_github_token: "false"
          token: ${{ steps.app-token.outputs.token }}
          tagger_name: ${{ steps.app-token.outputs.app-slug && format('{0}[bot]', steps.app-token.outputs.app-slug) || secrets.CLDMV_BOT_NAME }}
          tagger_email: ${{ steps.app-token.outputs.app-slug && format('{0}+{1}[bot]@users.noreply.github.com', steps.get-user-id.outputs.user-id, steps.app-token.outputs.app-slug) || secrets.CLDMV_BOT_EMAIL }}
          gpg_private_key: ${{ secrets.CLDMV_BOT_GPG_PRIVATE_KEY }}
          gpg_passphrase: ${{ secrets.CLDMV_BOT_GPG_PASSPHRASE }}

  # Matrix Test 4: App Token + App Permissions + YAML Permissions
  test-app-with-app-perms-with-yaml-perms:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      actions: write
      pull-requests: write
    outputs:
      result: ${{ steps.test-tags.outputs.overall_result }}
      git_result: ${{ steps.test-tags.outputs.git_result }}
      api_result: ${{ steps.test-tags.outputs.api_result }}
      gpg_result: ${{ steps.test-tags.outputs.gpg_result }}
      details: ${{ steps.test-tags.outputs.details }}

    steps:
      - uses: actions/checkout@v4

      - name: Get CLDMV app token (with specific permissions requested)
        id: app-token
        uses: actions/create-github-app-token@v2
        with:
          app-id: ${{ secrets.CLDMV_BOT_APP_ID }}
          private-key: ${{ secrets.CLDMV_BOT_APP_PRIVATE_KEY }}
          owner: ${{ github.repository_owner }}
          permission-contents: write
          permission-metadata: read
          permission-pull-requests: write
          permission-actions: write

      - name: Get user ID for bot email
        id: get-user-id
        run: |
          user_id=$(gh api user --jq '.id')
          echo "user-id=$user_id" >> $GITHUB_OUTPUT
        env:
          GH_TOKEN: ${{ steps.app-token.outputs.token }}

      - name: Test tag creation
        id: test-tags
        uses: CLDMV/.github/.github/actions/testing/steps/test-tag-creation-methods@v1
        with:
          test_tag_name: "a11-${{ inputs.test_tag_name }}"
          target_commit: ${{ inputs.target_commit }}
          cleanup_tag: ${{ inputs.cleanup_tag }}
          use_github_token: "false"
          token: ${{ steps.app-token.outputs.token }}
          tagger_name: ${{ steps.app-token.outputs.app-slug && format('{0}[bot]', steps.app-token.outputs.app-slug) || secrets.CLDMV_BOT_NAME }}
          tagger_email: ${{ steps.app-token.outputs.app-slug && format('{0}+{1}[bot]@users.noreply.github.com', steps.get-user-id.outputs.user-id, steps.app-token.outputs.app-slug) || secrets.CLDMV_BOT_EMAIL }}
          gpg_private_key: ${{ secrets.CLDMV_BOT_GPG_PRIVATE_KEY }}
          gpg_passphrase: ${{ secrets.CLDMV_BOT_GPG_PASSPHRASE }}

  # Matrix Test 5: GITHUB_TOKEN + No YAML Permissions
  test-github-token-no-yaml-perms:
    runs-on: ubuntu-latest
    outputs:
      result: ${{ steps.test-tags.outputs.overall_result }}
      git_result: ${{ steps.test-tags.outputs.git_result }}
      api_result: ${{ steps.test-tags.outputs.api_result }}
      gpg_result: ${{ steps.test-tags.outputs.gpg_result }}
      details: ${{ steps.test-tags.outputs.details }}

    steps:
      - uses: actions/checkout@v4

      - name: Test tag creation
        id: test-tags
        uses: CLDMV/.github/.github/actions/testing/steps/test-tag-creation-methods@v1
        with:
          test_tag_name: "gh0-${{ inputs.test_tag_name }}"
          target_commit: ${{ inputs.target_commit }}
          cleanup_tag: ${{ inputs.cleanup_tag }}
          use_github_token: "true"
          token: ${{ secrets.GITHUB_TOKEN }}
          tagger_name: "github-actions[bot]"
          tagger_email: "github-actions[bot]@users.noreply.github.com"
          gpg_private_key: ""
          gpg_passphrase: ""

  # Matrix Test 6: GITHUB_TOKEN + YAML Permissions
  test-github-token-with-yaml-perms:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      actions: write
      pull-requests: write
    outputs:
      result: ${{ steps.test-tags.outputs.overall_result }}
      git_result: ${{ steps.test-tags.outputs.git_result }}
      api_result: ${{ steps.test-tags.outputs.api_result }}
      gpg_result: ${{ steps.test-tags.outputs.gpg_result }}
      details: ${{ steps.test-tags.outputs.details }}

    steps:
      - uses: actions/checkout@v4

      - name: Test tag creation
        id: test-tags
        uses: CLDMV/.github/.github/actions/testing/steps/test-tag-creation-methods@v1
        with:
          test_tag_name: "gh1-${{ inputs.test_tag_name }}"
          target_commit: ${{ inputs.target_commit }}
          cleanup_tag: ${{ inputs.cleanup_tag }}
          use_github_token: "true"
          token: ${{ secrets.GITHUB_TOKEN }}
          tagger_name: "github-actions[bot]"
          tagger_email: "github-actions[bot]@users.noreply.github.com"
          gpg_private_key: ""
          gpg_passphrase: ""

  # Summary job to display comprehensive results
  summary:
    name: "📊 Test Results Summary"
    needs:
      [
        test-app-no-app-perms-no-yaml-perms,
        test-app-with-app-perms-no-yaml-perms,
        test-app-no-app-perms-with-yaml-perms,
        test-app-with-app-perms-with-yaml-perms,
        test-github-token-no-yaml-perms,
        test-github-token-with-yaml-perms
      ]
    if: always()
    runs-on: ubuntu-latest
    steps:
      - name: Display comprehensive test summary
        run: |
          echo "## 🧪 Permission Matrix Test Results" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Package: ${{ inputs.package_name }}" >> $GITHUB_STEP_SUMMARY
          echo "### Test Tag Base: ${{ inputs.test_tag_name }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY

          echo "| Test Scenario | Token | App Perms | YAML Perms | Git | API | GPG | Overall |" >> $GITHUB_STEP_SUMMARY
          echo "|---------------|-------|-----------|------------|-----|-----|-----|---------|" >> $GITHUB_STEP_SUMMARY

          # App Token + No App Perms + No YAML Perms
          a00_git="${{ needs.test-app-no-app-perms-no-yaml-perms.outputs.git_result == 'success' && '✅' || '❌' }}"
          a00_api="${{ needs.test-app-no-app-perms-no-yaml-perms.outputs.api_result == 'success' && '✅' || '❌' }}"
          a00_gpg="${{ needs.test-app-no-app-perms-no-yaml-perms.outputs.gpg_result == 'success' && '✅' || '❌' }}"
          a00_overall="${{ needs.test-app-no-app-perms-no-yaml-perms.outputs.result == 'success' && '✅' || '❌' }}"
          echo "| App + No App + No YAML | App | ❌ | ❌ | $a00_git | $a00_api | $a00_gpg | $a00_overall |" >> $GITHUB_STEP_SUMMARY

          # App Token + App Perms + No YAML Perms
          a10_git="${{ needs.test-app-with-app-perms-no-yaml-perms.outputs.git_result == 'success' && '✅' || '❌' }}"
          a10_api="${{ needs.test-app-with-app-perms-no-yaml-perms.outputs.api_result == 'success' && '✅' || '❌' }}"
          a10_gpg="${{ needs.test-app-with-app-perms-no-yaml-perms.outputs.gpg_result == 'success' && '✅' || '❌' }}"
          a10_overall="${{ needs.test-app-with-app-perms-no-yaml-perms.outputs.result == 'success' && '✅' || '❌' }}"
          echo "| App + App Perms + No YAML | App | ✅ | ❌ | $a10_git | $a10_api | $a10_gpg | $a10_overall |" >> $GITHUB_STEP_SUMMARY

          # App Token + No App Perms + YAML Perms
          a01_git="${{ needs.test-app-no-app-perms-with-yaml-perms.outputs.git_result == 'success' && '✅' || '❌' }}"
          a01_api="${{ needs.test-app-no-app-perms-with-yaml-perms.outputs.api_result == 'success' && '✅' || '❌' }}"
          a01_gpg="${{ needs.test-app-no-app-perms-with-yaml-perms.outputs.gpg_result == 'success' && '✅' || '❌' }}"
          a01_overall="${{ needs.test-app-no-app-perms-with-yaml-perms.outputs.result == 'success' && '✅' || '❌' }}"
          echo "| App + No App + YAML Perms | App | ❌ | ✅ | $a01_git | $a01_api | $a01_gpg | $a01_overall |" >> $GITHUB_STEP_SUMMARY

          # App Token + App Perms + YAML Perms
          a11_git="${{ needs.test-app-with-app-perms-with-yaml-perms.outputs.git_result == 'success' && '✅' || '❌' }}"
          a11_api="${{ needs.test-app-with-app-perms-with-yaml-perms.outputs.api_result == 'success' && '✅' || '❌' }}"
          a11_gpg="${{ needs.test-app-with-app-perms-with-yaml-perms.outputs.gpg_result == 'success' && '✅' || '❌' }}"
          a11_overall="${{ needs.test-app-with-app-perms-with-yaml-perms.outputs.result == 'success' && '✅' || '❌' }}"
          echo "| App + App Perms + YAML Perms | App | ✅ | ✅ | $a11_git | $a11_api | $a11_gpg | $a11_overall |" >> $GITHUB_STEP_SUMMARY

          # GITHUB_TOKEN + No YAML Perms  
          gh0_git="${{ needs.test-github-token-no-yaml-perms.outputs.git_result == 'success' && '✅' || '❌' }}"
          gh0_api="${{ needs.test-github-token-no-yaml-perms.outputs.api_result == 'success' && '✅' || '❌' }}"
          gh0_gpg="${{ needs.test-github-token-no-yaml-perms.outputs.gpg_result == 'success' && '✅' || '❌' }}"
          gh0_overall="${{ needs.test-github-token-no-yaml-perms.outputs.result == 'success' && '✅' || '❌' }}"
          echo "| GitHub + No YAML | GitHub | N/A | ❌ | $gh0_git | $gh0_api | $gh0_gpg | $gh0_overall |" >> $GITHUB_STEP_SUMMARY

          # GITHUB_TOKEN + YAML Perms
          gh1_git="${{ needs.test-github-token-with-yaml-perms.outputs.git_result == 'success' && '✅' || '❌' }}"
          gh1_api="${{ needs.test-github-token-with-yaml-perms.outputs.api_result == 'success' && '✅' || '❌' }}"
          gh1_gpg="${{ needs.test-github-token-with-yaml-perms.outputs.gpg_result == 'success' && '✅' || '❌' }}"
          gh1_overall="${{ needs.test-github-token-with-yaml-perms.outputs.result == 'success' && '✅' || '❌' }}"
          echo "| GitHub + YAML Perms | GitHub | N/A | ✅ | $gh1_git | $gh1_api | $gh1_gpg | $gh1_overall |" >> $GITHUB_STEP_SUMMARY

          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### 🔍 Matrix Analysis" >> $GITHUB_STEP_SUMMARY
          echo "- **Token**: App (GitHub App) vs GitHub (GITHUB_TOKEN)" >> $GITHUB_STEP_SUMMARY
          echo "- **App Perms**: Whether app token has explicit repository permissions" >> $GITHUB_STEP_SUMMARY
          echo "- **YAML Perms**: Whether workflow has explicit \`permissions:\` block" >> $GITHUB_STEP_SUMMARY
          echo "- **Git**: Tests \`git push --tags\` with authentication" >> $GITHUB_STEP_SUMMARY
          echo "- **API**: Tests GitHub API tag creation" >> $GITHUB_STEP_SUMMARY
          echo "- **GPG**: Tests GPG signature verification" >> $GITHUB_STEP_SUMMARY
          echo "- **Overall**: Combined result of all tests" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### 🎯 Key Findings" >> $GITHUB_STEP_SUMMARY
          echo "This matrix helps identify:" >> $GITHUB_STEP_SUMMARY
          echo "1. **Permission interaction bugs** between app and workflow permissions" >> $GITHUB_STEP_SUMMARY
          echo "2. **Token type differences** in authentication behavior" >> $GITHUB_STEP_SUMMARY
          echo "3. **API vs Git command consistency** across permission combinations" >> $GITHUB_STEP_SUMMARY
          echo "4. **GPG signing compatibility** with different permission setups" >> $GITHUB_STEP_SUMMARY
