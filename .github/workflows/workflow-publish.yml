# CLDMV/.github/.github/workflows/publish.yml
name: 📦 Publish Workflow (Org-Level)

on:
  workflow_call:
    inputs:
      package_name:
        required: true
        type: string
        description: "NPM package name (e.g., @cldmv/slothlet)"
      debug:
        required: false
        type: boolean
        default: false
        description: "Enable debug logging for troubleshooting"
      node_version:
        required: false
        type: string
        default: "lts/*"
        description: "Node.js version to use (default: lts/*)"
      package_manager:
        required: false
        type: string
        default: "npm"
        description: "Package manager (npm or yarn)"
      version:
        required: false
        type: string
        default: ""
        description: "Version to publish (auto-detected from package.json if not provided)"
      publish_to_npm:
        required: false
        type: boolean
        default: true
        description: "Publish to NPM registry"
      publish_to_github_packages:
        required: false
        type: boolean
        default: true
        description: "Publish to GitHub Packages registry"
      publish_command:
        required: false
        type: string
        default: ""
        description: "Custom NPM publish command"
      github_packages_publish_command:
        required: false
        type: string
        default: ""
        description: "Custom GitHub Packages publish command"
      skip_publish:
        required: false
        type: boolean
        default: false
        description: "Skip ALL publishing (for testing)"
      # Build parameters
      min_node_version:
        required: false
        type: string
        default: "20"
        description: "Minimum Node.js version for matrix testing (enables matrix when set)"
      max_node_major:
        required: false
        type: string
        default: "22"
        description: "Override max Node.js major version (default: 22)"
      test_command:
        required: false
        type: string
        default: "npm test"
        description: "Command to run tests"
      build_command:
        required: false
        type: string
        default: "npm run build:ci"
        description: "Command to build package"
      # Release parameters
      is_prerelease:
        required: false
        type: boolean
        default: false
        description: "Whether this is a prerelease"
      release_source_only:
        required: false
        type: boolean
        default: false
        description: "Whether to create source-only release (no package assets)"
      create_documentation:
        required: false
        type: boolean
        default: true
        description: "Whether to create/update VERSION_TAGS.md"
      # Test control options
      skip_performance_tests:
        required: false
        type: boolean
        default: false
        description: "Skip performance tests during CI"
      skip_matrix_tests:
        required: false
        type: boolean
        default: false
        description: "Skip matrix testing (use single node version only)"
      # Bot signing parameters
      use_gpg:
        required: false
        type: boolean
        default: false
        description: "If true, forward provided secrets to enable GPG signing"
    secrets:
      NPM_TOKEN:
        description: "NPM token for publishing packages"
        required: true
      BOT_APP_ID:
        description: "GitHub App ID for CLDMV bot"
        required: false
      BOT_APP_PRIVATE_KEY:
        description: "GitHub App private key for CLDMV bot"
        required: false
      TAGGER_NAME:
        description: "GPG tagger name for signing"
        required: false
      TAGGER_EMAIL:
        description: "GPG tagger email for signing"
        required: false
      GPG_PRIVATE_KEY:
        description: "ASCII-armored private key for signing"
        required: false
      GPG_PASSPHRASE:
        description: "Passphrase for the private key (if protected)"
        required: false
    outputs:
      npm-published:
        description: "Whether the package was published to NPM"
        value: ${{ jobs.publish.outputs.npm-published }}
      github-packages-published:
        description: "Whether the package was published to GitHub Packages"
        value: ${{ jobs.publish.outputs.github-packages-published }}
      release-id:
        description: "The ID of the created GitHub release"
        value: ${{ jobs.publish.outputs.release-id }}
      major-version:
        description: "The major version tag that was updated"
        value: ${{ jobs.publish.outputs.major-version }}
      minor-version:
        description: "The minor version tag that was updated"
        value: ${{ jobs.publish.outputs.minor-version }}
      tags-updated:
        description: "Whether version tags were updated"
        value: ${{ jobs.publish.outputs.tags-updated }}
  workflow_dispatch:
    inputs:
      package_name:
        required: true
        type: string
        description: "NPM package name (e.g., @cldmv/slothlet)"
      debug:
        required: false
        type: boolean
        default: false
        description: "Enable debug logging for troubleshooting"
      node_version:
        required: false
        type: string
        default: "lts/*"
        description: "Node.js version to use (default: lts/*)"
      version:
        required: false
        type: string
        default: ""
        description: "Version to publish (auto-detected from package.json if not provided)"

jobs:
  debug-inputs:
    name: "🔍 Debug Input Parameters"
    runs-on: ubuntu-latest
    steps:
      - name: "Debug min_node_version parameter"
        run: |
          echo "🔍 DEBUG (publish.yml): min_node_version input = '${{ inputs.min_node_version }}'"
          echo "🔍 DEBUG (publish.yml): max_node_major input = '${{ inputs.max_node_major }}'"
          echo "🔍 DEBUG (publish.yml): node_version input = '${{ inputs.node_version }}'"

  build-and-test:
    name: "🏗️ Build and Test"
    needs: debug-inputs
    uses: CLDMV/.github/.github/workflows/reusable-build-and-test.yml@v1
    with:
      package_name: ${{ inputs.package_name }}
      debug: ${{ inputs.debug }}
      node_version: ${{ inputs.node_version }}
      min_node_version: ${{ inputs.min_node_version }}
      max_node_major: ${{ inputs.max_node_major }}
      package_manager: ${{ inputs.package_manager }}
      test_command: ${{ inputs.test_command }}
      build_command: ${{ inputs.build_command }}
      skip_performance_tests: ${{ inputs.skip_performance_tests }}
      skip_matrix_tests: ${{ inputs.skip_matrix_tests }}

  publish:
    name: "📦 Publish Package"
    needs: build-and-test
    uses: CLDMV/.github/.github/workflows/reusable-publishing.yml@v1
    with:
      package_name: ${{ inputs.package_name }}
      debug: ${{ inputs.debug }}
      node_version: ${{ inputs.node_version }}
      package_manager: ${{ inputs.package_manager }}
      version: ${{ inputs.version }}
      publish_command_npm: ${{ inputs.publish_command }}
      publish_command_github_packages: ${{ inputs.github_packages_publish_command }}
    secrets:
      NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

  summary:
    name: "📋 Publish Summary"
    needs: [build-and-test, publish]
    if: always()
    runs-on: ubuntu-latest
    steps:
      - name: Generate Publish Summary
        run: |
          echo "## 📦 Publish Workflow Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Package**: \`${{ inputs.package_name }}\`" >> $GITHUB_STEP_SUMMARY
          echo "**Version**: \`${{ inputs.version }}\`" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY

          if [ "${{ needs.publish.result }}" = "success" ]; then
            echo "✅ **Overall Status**: Publishing workflow completed successfully" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "Check the detailed progress above for specific publishing results to each registry." >> $GITHUB_STEP_SUMMARY
          else
            echo "❌ **Overall Status**: Publishing workflow failed" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "Check the detailed progress above and workflow logs for specific failure details." >> $GITHUB_STEP_SUMMARY
          fi
